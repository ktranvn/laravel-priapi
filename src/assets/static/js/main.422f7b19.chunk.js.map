{"version":3,"sources":["components/sidebar.js","containers/dashboard/index.js","containers/request/index.js","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Sidebar","handleGetRequests","axios","get","window","_baseUrl","then","res","console","log","data","length","_folders","forEach","item","k","parent","childs","recursiveRequest","push","setState","menu","raw","arrs","val","key","id","_renderMenu","map","className","state","actived","type","onClick","_handleClickMenu","editable","onKeyUp","e","_handleChangeMenu","defaultValue","name","_handleEditMenu","_handleSaveMenu","onDoubleClick","to","request_type","data-bs-toggle","aria-expanded","_handleAddRequest","_handleDeleteRequest","dataChange","target","value","_method","post","alert","config","this","style","width","React","Component","Dashboard","props","theme","scheme","author","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","defaults","headers","Request","_getRequest","match","params","request","request_header","JSON","parse","request_params","request_body","_handleChangeValue","files","_","set","_handleEditInput","_handleTestRequest","_headers","join","url","uri","indexOf","formData","FormData","append","response","catch","status","statusText","desc","_handleUpdateRequest","sidebar","current","description","sort","opt","field_type","createRef","prevProps","prevState","snapshot","ref","onBlur","onChange","aria-label","height","viewBox","fill","xmlns","d","cursor","scope","ot","ok","role","data-bs-target","aria-controls","aria-selected","aria-labelledby","rows","isString","dangerouslySetInnerHTML","__html","hideRoot","extend","valueLabel","textDecoration","nestedNodeLabel","keyPath","nodeType","expanded","fontWeight","App","exact","path","component","withRouter","connect","auth","dispatch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","middleware","thunk","store","createStore","action","applyMiddleware","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.422f7b19.chunk.js","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport { useLocation, Link } from 'react-router-dom'\n\nvar x = [];\n\nclass Sidebar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            config: {\n                name: \"API Test tool & Document\"\n            },\n            menu: {},\n            editable: {},\n            actived: {},\n            dataChange: null\n        }\n\n    }\n\n    handleGetRequests = () => {\n        axios.get(window._baseUrl+'/apiman/requests').then((res)=>{\n            console.log(res)\n            if(res.data.length > 0){\n                let _folders = [];\n                res.data.forEach((item,k)=>{\n                    console.log(\"22\", item, k)\n                    if(item.parent == 0) {\n                        item.childs = this.recursiveRequest(item, res.data)\n                        _folders.push(item);\n                    }\n                })\n                console.log('YYY', _folders);\n                this.setState({\n                    menu: _folders\n                })\n            }\n\n        })\n    }\n\n    recursiveRequest = (item, raw) => {\n        let arrs = [];\n        raw.forEach((val, key)=>{\n            if(val.parent == item.id) {\n                val.childs = this.recursiveRequest(val, raw)\n                arrs.push(val);\n            }\n        })\n        return arrs;\n    }\n\n    _renderMenu = (data) => {\n        if(data.length > 0){\n            return data.map((item, key)=>{\n                return (\n                    <li key={key} className={(this.state.actived[item.id]?'active': '') + \" \"+ (item.type == \"FOLDER\" ? \"folder\" : \"request\")} onClick={()=>this._handleClickMenu(item.id)}>\n                        <span>\n                            {\n                                !this.state.editable[item.id] ? (\n                                    item.type == \"FOLDER\" ? (\n                                        <a\n                                            onDoubleClick={(e)=>this._handleEditMenu(item.id, e)}\n                                        >\n                                            {item.name}\n                                        </a>\n                                    ): (\n                                        <Link\n                                            onDoubleClick={(e)=>this._handleEditMenu(item.id, e)}\n                                            to={\"/request/\"+item.id}>\n                                            <span className={\"request_method \" + item.request_type}>{item.request_type}</span> {item.name}\n                                        </Link>\n                                    )\n                                ):(\n                                    <>\n                                        <input\n                                            type={\"text\"}\n                                            onKeyUp={(e)=>this._handleChangeMenu(item.id, e)}\n                                            defaultValue={item.name}\n                                        />\n                                        <span onClick={(e)=>this._handleEditMenu(item.id, e)}><i className={\"fas fa fa-times\"}></i></span>\n                                        <span onClick={(e)=>this._handleSaveMenu(item.id, e)}><i className={\"fas fa fa-check\"}></i></span>\n                                    </>\n\n                                )\n\n                            }\n                            <div className=\"dropdown\">\n                                <span className=\"dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                    <i className=\"fas fa-ellipsis-v\"></i>\n                                </span>\n                                <ul className=\"dropdown-menu\">\n                                    {\n                                        item.type==\"FOLDER\" ? (\n                                            <>\n                                            <li><a className=\"dropdown-item\"\n                                                      onClick={()=>this._handleAddRequest(item.id, \"FOLDER\")}>Add Folder</a></li>\n                                            <li><a className=\"dropdown-item\"\n                                                      onClick={()=>this._handleAddRequest(item.id, \"REQUEST\")}>Add Request</a></li>\n                                            <li><a className=\"dropdown-item\"\n                                                    onClick={()=>this._handleDeleteRequest(item.id)}>Delete</a></li>\n                                            </>\n                                        ) : (\n                                            <li><a className=\"dropdown-item\"\n                                            onClick={()=>this._handleDeleteRequest(item.id)}>Delete</a></li>\n                                        )\n                                    }\n\n                                </ul>\n                            </div>\n                        </span>\n                        <ul>{this._renderMenu(item.childs)}</ul>\n                    </li>\n                )\n            })\n        }\n        return (<></>)\n    }\n\n    _handleClickMenu = (id, e) => {\n        console.log(id)\n        this.setState({\n            actived: {}\n        })\n        this.setState({\n                actived: {\n                    [id]: !this.state.actived[id]\n                }\n            }\n        )\n    }\n\n    _handleEditMenu = (id, e) =>{\n        this.setState({\n                dataChange: null,\n                editable: {\n                    [id]: !this.state.editable[id]\n                }\n            }\n        )\n    }\n\n    _handleChangeMenu = (id, e) => {\n        console.log(id, e);\n        this.setState({\n                dataChange: e.target.value\n            })\n    }\n\n    _handleSaveMenu = (id, e) => {\n        console.log(this.state.dataChange, id, e);\n        let data = {\n            id: id,\n            _method: \"PUT\",\n            name: this.state.dataChange\n        };\n\n        axios.post(window._baseUrl+'/apiman/requests', data).then(res=>{\n            this.handleGetRequests()\n            this.setState({\n                    dataChange: null,\n                    editable: {\n                        [id]: !this.state.editable[id]\n                    }\n                }\n            )\n        }, e=>{\n            alert(\"Invalid Name\")\n        })\n\n\n    }\n\n    _handleAddRequest = (id, type=\"FOLDER\") =>{\n        console.log(\"add\", id, type)\n        let data\n\n        if(type == \"FOLDER\"){\n            data = {\n                parent: id,\n                type: type,\n                name: \"New Folder\"\n            }\n        }else{\n            data = {\n                parent: id,\n                type: type,\n                name: \"New Request\",\n                request_type: \"GET\",\n            }\n        }\n\n        axios.post(window._baseUrl+'/apiman/requests', data).then(res=>{\n            this.handleGetRequests()\n        })\n    }\n\n    _handleDeleteRequest = (id) =>{\n        console.log(\"delete\", id)\n        axios.post(window._baseUrl+'/apiman/requests', {id: id, _method: \"DELETE\"}).then(res=>{\n            this.handleGetRequests()\n        })\n    }\n\n\n\n\n    componentDidMount() {\n        this.handleGetRequests()\n    }\n\n\n    render() {\n        return (\n            <div className=\"main-db-left\">\n                <div className=\"main-title-logo\">\n                    <h2><strong className=\"text-left-login\">pri</strong><strong\n                        className=\"text-right-login\">api</strong></h2>\n                </div>\n                <div className=\"main-left-menu-text\">\n                    <h5 className=\"content-title-sidebar\">\n                        {this.state.config.name}\n                        <div className=\"dropdown d-inline-block ml-1\">\n                            <span className=\"dropdown-toggle\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n                                <i className={\"fa fas fa-plus-square\"}></i>\n                            </span>\n                            <ul className=\"dropdown-menu\">\n                                <li><a className=\"dropdown-item\"\n                                          onClick={()=>this._handleAddRequest(0, \"FOLDER\")}>Add Folder</a></li>\n                                <li><a className=\"dropdown-item\"\n                                          onClick={()=>this._handleAddRequest(0, \"REQUEST\")}>Add Request</a></li>\n\n                            </ul>\n                        </div>\n                    </h5>\n                </div>\n                <div className=\"flex-shrink-0  main-menu-sidebar \" style={{width: '280px'}}>\n                    <ul className=\"list-unstyled ps-0\">\n                        {this._renderMenu(this.state.menu)}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Sidebar;\n","import Sidebar from \"../../components/sidebar\"\n\nimport {\n    Link\n} from 'react-router-dom'\nimport React, { useRef, useLayoutEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nclass Dashboard extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {}\n    }\n\n\n    render() {\n        return (\n        <>\n            <Sidebar/>\n            <div className=\"main-db-right\">\n                <div className=\"main-right-content\">\n                </div>\n            </div>\n        </>\n        );\n    }\n}\n\nexport default Dashboard;\n","import Sidebar from \"../../components/sidebar\"\nimport JSONTree from 'react-json-tree'\nimport _ from 'lodash';\nimport {\n    Link\n} from 'react-router-dom'\nimport React, { useRef, useLayoutEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nconst theme = {\n    scheme: 'monokai',\n    author: 'wimer hazenberg (http://www.monokai.nl)',\n    base00: '#272822',\n    base01: '#383830',\n    base02: '#49483e',\n    base03: '#75715e',\n    base04: '#a59f85',\n    base05: '#f8f8f2',\n    base06: '#f5f4f1',\n    base07: '#f9f8f5',\n    base08: '#f92672',\n    base09: '#fd971f',\n    base0A: '#f4bf75',\n    base0B: '#a6e22e',\n    base0C: '#a1efe4',\n    base0D: '#66d9ef',\n    base0E: '#ae81ff',\n    base0F: '#cc6633',\n};\n\naxios.defaults.headers.post['Content-Type'] ='application/x-www-form-urlencoded';\n\n\nclass Request extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            request: {\n                id: 0,\n                name: \"\",\n                description: \"\",\n                parent:0,\n                sort:0,\n                type:\"REQUEST\",\n                request_type:\"GET\",\n                uri: \"\",\n                request_params:[],\n                request_header:[],\n                request_body:[]\n            },\n            response:{\n                data: {},\n                status: 200,\n                statusText: \"OK\"\n            },\n            editable: {},\n            opt: {\n                request_type: [\"GET\", \"POST\", \"PUT\", \"DELETE\"],\n                headers: [\n                    {key: \"Authorization\", val: false},\n                    {key: \"Accept\", val: [\"application/json\"]},\n                    {key: \"Accept-Encoding\", val: []}\n                ],\n                field_type: [\"string\", \"binary\", \"int\", \"float\"]\n            },\n        }\n\n        this.sidebar = React.createRef();\n    }\n\n    _getRequest = () => {\n        console.log(this.props)\n        axios.get(window._baseUrl+\"/apiman/requests?id=\"+this.props.match.params.id).then(res=>{\n            if(res.data){\n                this.setState({\n                    request: {\n                        ...res.data,\n                        request_header: JSON.parse(res.data.request_header),\n                        request_params: JSON.parse(res.data.request_params),\n                        request_body: JSON.parse(res.data.request_body)\n                    }\n                })\n            }\n        })\n    }\n\n    _handleChangeValue = (key, e, editable = false) => {\n        let {request} = this.state\n\n        if(e.target.files && e.target.files.length > 0) {\n            _.set(request, key, e.target.files[0])\n        }else{\n            _.set(request, key, e.target.value)\n        }\n\n        if(editable){\n            this.setState({\n                request: request,\n                editable: {\n                    ...this.state.editable,\n                    [key]: !this.state.editable[key]\n                }\n            })\n        }else{\n            this.setState({\n                request: request\n            })\n        }\n\n    }\n\n    _handleEditInput = (id) =>{\n        this.setState({\n                editable: {\n                    ...this.state.editable,\n                    [id]: !this.state.editable[id]\n                }\n            }\n        )\n    }\n\n    _handleTestRequest = () => {\n        const {request} = this.state;\n        let _headers = {};\n        let _params = [];\n        let params = \"\";\n        if(request.request_params.length>0){\n            _params = request.request_params.map(item=>{\n                return item.key + \"=\" + item.value\n            })\n            params = \"?\"+_params.join('&')\n        }\n\n        if(request.request_header.length>0){\n            request.request_header.forEach(item=>{\n                _headers[item.key] = item.value\n            })\n        }\n\n        let url = request.uri ? window._baseUrl + request.uri + params : window._baseUrl + \"/\" + params\n        if([\"POST\", \"PUT\", \"DELETE\"].indexOf(request.request_type) >= 0){\n            let formData = new FormData();\n            request.request_body.forEach((item)=>{\n                formData.append(item.key, item.value)\n            })\n            axios.post(url, formData, {\n                headers: _headers\n            }).then(res=>{\n                let response;\n                this.setState({\n                    response: res\n                })\n            }).catch(e=>{\n                if(!e.response){\n                    this.setState({\n                        response: {\n                            data: {\"msg\": \"NetworkError\"},\n                            status: \"N/A\",\n                            statusText: \"NetworkError\"\n                        }\n                    })\n                }else{\n                    this.setState({\n                        response: {...e.response, data: {\"response\": e.response.data}}\n                    })\n                }\n\n            })\n        }else{\n            axios.get(url, {\n                headers: _headers\n            }).then(res=>{\n                this.setState({\n                    response: res\n                })\n            }).catch(e=>{\n                if(!e.response){\n                    this.setState({\n                        response: {\n                            data: {\"msg\": \"NetworkError\"},\n                            status: \"N/A\",\n                            statusText: \"NetworkError\"\n                        }\n                    })\n                }else{\n                    this.setState({\n                        response: {...e.response, data: {\"response\": e.response.data}}\n                    })\n                }\n\n            })\n        }\n    }\n\n    _handleAddRequest = (type) => {\n        if(type == 'header'){\n            let request_header = this.state.request.request_header;\n            request_header.push({key: \"xxx\", value: \"\", desc: \"\"});\n            this.setState({\n                request: {\n                    ...this.state.request,\n                    request_header: request_header\n                }\n            })\n        }\n        if(type == 'params'){\n            let request_params = this.state.request.request_params;\n            request_params.push({key: \"\", value: \"\", desc: \"\"});\n            this.setState({\n                request: {\n                    ...this.state.request,\n                    request_params: request_params\n                }\n            })\n        }\n\n        if(type == 'body'){\n            let request_body = this.state.request.request_body;\n            request_body.push({key: \"\", type: \"string\", value: \"\", desc: \"\"});\n            this.setState({\n                request: {\n                    ...this.state.request,\n                    request_body: request_body\n                }\n            })\n        }\n\n    }\n\n    _handleUpdateRequest = () => {\n        console.log(this.props)\n        let data = this.state.request\n        data._method = \"PUT\"\n        axios.post(window._baseUrl+'/apiman/requests', data).then(res=>{\n            console.log(res)\n            this._getRequest()\n            this.sidebar.current.handleGetRequests();\n        })\n    }\n\n    componentDidMount() {\n        console.log(\"DIDMOUNT\")\n        this._getRequest()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        console.log(\"DIDUPDATE\", this.props.match.params, prevProps.match.params)\n        if(this.props.match.params != prevProps.match.params)\n            this._getRequest()\n    }\n\n    render() {\n        const {request, opt, response, editable} = this.state\n\n        return (\n            <>\n                <Sidebar  ref={this.sidebar}/>\n                <div className=\"main-db-right\">\n                    <div className=\"main-right-content\">\n                        <div className=\"main-title-create mt-5\">\n                            {editable.name ? (\n                                <input className={\"form-control\"} value={request.name}\n                                       onBlur={(e)=>this._handleChangeValue(\"name\", e, true)}\n                                       onChange={(e)=>this._handleChangeValue(\"name\", e)}/>\n                            ) : (\n                                <h5 onDoubleClick={()=>this._handleEditInput(\"name\")} className=\"font-weight-bold content-title-create event-click-input\">{request.name}</h5>\n                            )}\n\n                        </div>\n                        <div className=\"main-content-db main-create-device\">\n\n                            <div className=\"main-form-device-create\">\n                                <div className=\"main-select-form\">\n                                    <div className=\"main-cus-select\">\n                                        <select className={\"form-select w-auto float-right bg-method cus-select \"+request.request_type}\n                                                aria-label=\"Default select example\"\n                                                value={request.request_type}\n                                                onChange={(e)=>this._handleChangeValue(\"request_type\", e)}\n                                        >\n                                            {opt.request_type.map((item, key)=> {\n                                                    return (\n                                                        <option key={key} value={item}>{item}</option>\n                                                    )\n                                                }\n                                            )}\n                                        </select>\n                                        <svg width=\"7\" height=\"6\" viewBox=\"0 0 7 6\" fill=\"none\"\n                                             xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M3.5 6L0.468912 0.749999L6.53109 0.75L3.5 6Z\" fill=\"#C4C4C4\"/>\n                                        </svg>\n                                    </div>\n                                    <div className=\"main-cus-select\">\n                                        <select className=\"form-select w-auto float-right select-domain-cus pr-0\"\n                                                aria-label=\"Default select example\"\n                                        defaultValue={window._baseUrl}>\n                                            <option>{window._baseUrl}</option>\n                                        </select>\n                                        <svg width=\"7\" height=\"6\" viewBox=\"0 0 7 6\" fill=\"none\"\n                                             xmlns=\"http://www.w3.org/2000/svg\">\n                                            <path d=\"M3.5 6L0.468912 0.749999L6.53109 0.75L3.5 6Z\" fill=\"#C4C4C4\"/>\n                                        </svg>\n                                    </div>\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control pl-0\"\n                                        value={request.uri}\n                                        onChange={(e)=>this._handleChangeValue(\"uri\", e)}\n                                    />\n                                    <button className=\"btn btn-secondary bg-blue btn-cus-submit\" onClick={()=>this._handleTestRequest()}>\n                                        <label>Submit</label>\n                                    </button>\n                                    <button className=\"btn btn-secondary bg-blue btn-cus-submit-save item-btn-submit\"\n                                            onClick={this._handleUpdateRequest}>\n                                        <i className=\"fa fa-save\"></i>\n                                    </button>\n                                    <button className=\"btn btn-secondary bg-blue btn-cus-submit-delete item-btn-submit\">\n                                        <i className=\"fas fa-trash\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                                {editable.description ? (\n                                    <div className=\"main-note-form-create event-click-area\">\n                                            <textarea className={\"form-control\"} value={request.description}\n                                           onBlur={(e)=>this._handleChangeValue(\"description\", e, true)}\n                                           onChange={(e)=>this._handleChangeValue(\"description\", e)}/>\n                                    </div>\n                                ) : (\n                                    <div  onDoubleClick={()=>this._handleEditInput(\"description\")} className=\"main-note-form-create event-click-area\">\n                                        <p>{request.description}</p>\n                                    </div>\n                                )}\n                            <div className=\"main-form-type\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-7\">\n                                        <div className=\"card border-none\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title font-weight-bold\">\n                                                    Request Headers\n                                                    <span\n                                                        onClick={() => this._handleAddRequest(\"header\")}\n                                                        style={{cursor: \"pointer\"}}>\n                                                        <i className={\"fas fa fa-plus-square\"}></i>\n                                                    </span></h5>\n                                                <table className=\"table w-100 table-bordered\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th scope=\"col\">Field name</th>\n                                                            <th scope=\"col\">Value</th>\n                                                            <th scope=\"col\">Description</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        request.request_header.length>0 ? request.request_header.map((item, k)=>{\n                                                            return (\n                                                                <tr key={k}>\n                                                                    <th scope=\"row\">\n                                                                        <input type=\"text\" value={item.key}\n                                                                               className=\"form-control\"\n                                                                            onChange={(e)=>this._handleChangeValue(\"request_header[\"+k+\"].key\", e)}\n                                                                        />\n                                                                    </th>\n                                                                    <td>\n                                                                        <input\n                                                                            value={item.value}\n                                                                            onChange={(e)=>this._handleChangeValue(\"request_header[\"+k+\"].value\", e)}\n                                                                            type=\"text\" className=\"form-control\"/>\n                                                                    </td>\n                                                                    <td>\n                                                                        <input\n                                                                            value={item.desc}\n                                                                            onChange={(e)=>this._handleChangeValue(\"request_header[\"+k+\"].desc\", e)}\n                                                                            type=\"text\" className=\"form-control\"/>\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        }) : (<></>)\n                                                    }\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n\n                                        <div className=\"card border-none\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title font-weight-bold\">Request Params\n                                                    <span\n                                                        onClick={() => this._handleAddRequest(\"params\")}\n                                                        style={{cursor: \"pointer\"}}>\n                                                        <i className={\"fas fa fa-plus-square\"}></i>\n                                                    </span>\n                                                </h5>\n                                                <table className=\"table w-100 table-bordered\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th scope=\"col\">Field name</th>\n                                                            <th scope=\"col\">Value</th>\n                                                            <th scope=\"col\">Description</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        request.request_params.length>0 ? request.request_params.map((item, k)=>{\n                                                            return (\n                                                                <tr key={k}>\n                                                                    <th scope=\"row\">\n                                                                        <input type=\"text\"\n                                                                               value={item.key}\n                                                                               onChange={(e)=>this._handleChangeValue(\"request_params[\"+k+\"].key\", e)}\n                                                                               className=\"form-control\"/>\n                                                                    </th>\n                                                                    <td>\n                                                                        <input value={item.value}\n                                                                               onChange={(e)=>this._handleChangeValue(\"request_params[\"+k+\"].value\", e)}\n                                                                               type=\"text\" className=\"form-control\"/>\n                                                                    </td>\n                                                                    <td>\n                                                                        <input value={item.desc}\n                                                                               onChange={(e)=>this._handleChangeValue(\"request_params[\"+k+\"].desc\", e)}\n                                                                            type=\"text\" className=\"form-control\"/>\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        }) : (<></>)\n                                                    }\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n\n\n                                        <div className=\"card border-none\">\n                                            <div className=\"card-body\">\n                                                <h5 className=\"card-title font-weight-bold\">Request Body\n                                                    <span\n                                                        onClick={() => this._handleAddRequest(\"body\")}\n                                                        style={{cursor: \"pointer\"}}>\n                                                        <i className={\"fas fa fa-plus-square\"}></i>\n                                                    </span>\n                                                </h5>\n                                                <table className=\"table w-100 table-bordered\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th scope=\"col\">Field name</th>\n                                                            <th scope=\"col\">Field type</th>\n                                                            <th scope=\"col\">Value</th>\n                                                            <th scope=\"col\">Description</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                    {\n                                                        request.request_body.length>0 ? request.request_body.map((item, k)=>{\n                                                            return (\n                                                                <tr key={k}>\n                                                                    <th scope=\"row\">\n                                                                        <input type=\"text\"\n                                                                               value={item.key}\n                                                                               onChange={(e)=>this._handleChangeValue(\"request_body[\"+k+\"].key\", e)}\n                                                                               className=\"form-control\"/>\n                                                                    </th>\n                                                                    <td>\n                                                                        <div className=\"select-cus\">\n                                                                            <select\n                                                                                value={item.type}\n                                                                                onChange={(e)=>this._handleChangeValue(\"request_body[\"+k+\"].type\", e)}\n                                                                                className=\"form-select w-100\"\n                                                                                    aria-label=\"Default select example\">\n                                                                                {opt.field_type.map((ot, ok)=> {\n                                                                                        return (\n                                                                                            <option key={ok} value={ot}>{ot}</option>\n                                                                                        )\n                                                                                    }\n                                                                                )}\n                                                                            </select>\n                                                                            <svg width=\"7\" height=\"6\" viewBox=\"0 0 7 6\" fill=\"none\"\n                                                                                 xmlns=\"http://www.w3.org/2000/svg\">\n                                                                                <path\n                                                                                    d=\"M3.5 6L0.468912 0.749999L6.53109 0.75L3.5 6Z\"\n                                                                                    fill=\"#C4C4C4\"/>\n                                                                            </svg>\n                                                                        </div>\n                                                                    </td>\n                                                                    <td>\n                                                                        {\n                                                                            item.type == \"binary\" ? (\n                                                                                <input\n                                                                                       onChange={(e)=>this._handleChangeValue(\"request_body[\"+k+\"].value\", e)}\n                                                                                       type=\"file\" className=\"form-control\"/>\n                                                                            ) : (\n                                                                                <input value={item.value}\n                                                                                       onChange={(e)=>this._handleChangeValue(\"request_body[\"+k+\"].value\", e)}\n                                                                                       type=\"text\" className=\"form-control\"/>\n                                                                            )\n                                                                        }\n\n                                                                    </td>\n                                                                    <td>\n                                                                        <input value={item.desc}\n                                                                               onChange={(e)=>this._handleChangeValue(\"request_body[\"+k+\"].desc\", e)}\n                                                                               type=\"text\" className=\"form-control\"/>\n                                                                    </td>\n                                                                </tr>\n                                                            )\n                                                        }) : (<></>)\n                                                    }\n\n\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                        </div>\n                                        <div className=\"d-none card border-none\">\n                                            <div className=\"card-body\">\n                                                <div className=\"main-card-body-code\">\n                                                    <h5 className=\"card-title font-weight-bold\"> Request Body Code </h5>\n                                                    <nav>\n                                                        <div className=\"nav nav-tabs\" id=\"nav-tab\" role=\"tablist\">\n                                                            <button className=\"nav-link active\" id=\"nav-home-tab\"\n                                                                    data-bs-toggle=\"tab\" data-bs-target=\"#nav-home\"\n                                                                    type=\"button\" role=\"tab\"\n                                                                    aria-controls=\"nav-home\" aria-selected=\"true\">\n                                                                <label>x-www-form-encode</label>\n                                                            </button>\n                                                            <button className=\"nav-link\" id=\"nav-profile-tab\"\n                                                                    data-bs-toggle=\"tab\" data-bs-target=\"#nav-profile\"\n                                                                    type=\"button\" role=\"tab\"\n                                                                    aria-controls=\"nav-profile\" aria-selected=\"false\">\n                                                                <label>Form Data</label>\n                                                            </button>\n                                                            <button className=\"nav-link\" id=\"nav-contact-tab\"\n                                                                    data-bs-toggle=\"tab\" data-bs-target=\"#nav-contact\"\n                                                                    type=\"button\" role=\"tab\"\n                                                                    aria-controls=\"nav-contact\" aria-selected=\"false\">\n                                                                <label>JSON raw</label>\n                                                            </button>\n                                                        </div>\n                                                    </nav>\n                                                </div>\n                                                <div className=\"tab-content\" id=\"nav-tabContent\">\n                                                    <div className=\"tab-pane fade show active\" id=\"nav-home\"\n                                                         role=\"tabpanel\" aria-labelledby=\"nav-home-tab\">\n                                            <textarea className=\"form-control\" rows=\"15\">\n\n                                            </textarea>\n                                                    </div>\n                                                    <div className=\"tab-pane fade\" id=\"nav-profile\" role=\"tabpanel\"\n                                                         aria-labelledby=\"nav-profile-tab\">\n                                            <textarea className=\"form-control\" rows=\"15\">\n\n                                            </textarea>\n                                                    </div>\n                                                    <div className=\"tab-pane fade\" id=\"nav-contact\" role=\"tabpanel\"\n                                                         aria-labelledby=\"nav-contact-tab\">\n                                            <textarea className=\"form-control\" rows=\"15\">\n\n                                            </textarea>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-md-5 pr-0\">\n                                        <div className=\"card border-none main-json-code\">\n                                            <div className=\"card-body\">\n                                                <div className=\"main-json-title\">\n                                                    <h5 className=\"card-title font-weight-bold\">Response Body</h5>\n                                                    <label>Status code:<strong\n                                                        className=\"color-green\">{response.status} {response.statusText}</strong></label>\n                                                </div>\n                                                <div className=\"main-json\">\n                                                    {\n                                                        _.isString(response.data) ? (\n                                                            <div dangerouslySetInnerHTML={{__html: response.data}} >\n                                                            </div>\n                                                        ) : (\n                                                            <JSONTree\n                                                                data={response.data}\n                                                                hideRoot={true}\n                                                                theme={{\n                                                                    extend: theme,\n                                                                    valueLabel: {\n                                                                        textDecoration: 'none',\n                                                                    },\n                                                                    nestedNodeLabel: ({ style }, keyPath, nodeType, expanded) => ({\n                                                                        style: {\n                                                                            ...style,\n                                                                            fontWeight: expanded ? 'bold' : 'normal',\n                                                                        },\n                                                                    }),\n                                                                }}\n                                                            />\n                                                        )\n                                                    }\n\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Request;\n","import {\n  Component\n} from 'react'\nimport {\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport { AnimatedSwitch } from 'react-router-transition';\nimport IdleTimer from 'react-idle-timer'\nimport { connect } from 'react-redux';\n\nimport Dashboard from './containers/dashboard';\nimport Request from './containers/request';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n      }\n\n  }\n\n  componentDidMount() {}\n\n  render(){\n    return (\n        <>\n            <div className=\"main-dashboard\">\n              <Switch>\n                <Route exact path=\"/\" component={Dashboard} />\n                <Route path=\"/request/:id\" component={Request}/>\n              </Switch>\n            </div>\n        </>\n      );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n      auth: state.auth,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// reducers/index.jsjs\nimport { combineReducers } from 'redux';\n\nconst reducers = combineReducers({\n    auth: {}\n});\n\nexport default (state, action) => reducers(state, action);","import { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\n\nconst middleware = [ thunk ];\n// check nếu không phải production thì push logger vào để log ra những action\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router  basename=\"priapi\">\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}